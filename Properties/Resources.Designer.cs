//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace metahub.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("metahub.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to start = trim @(namespace, newlines, 0, 0) final_trim
        ///
        ///none = /&amp;*/
        ///ws = /\s+/
        ///trim = /\s*/
        ///final_trim = /\s*$/
        ///newlines = /(\s*\n)+\s*/
        ///one_or_no_newline = /[ \t]*(\r\n)?[ \t]*/
        ///comma = trim &quot;,&quot; trim
        ///spaces = /[ \t]+/
        ///dot = &quot;.&quot;
        ///path_separator = &quot;.&quot;
        ///id = /[a-zA-Z0-9_]+/
        ///comma_or_newline = /\s*((\s*\n)+|,)\s*/
        ///semicolon_or_newline = /\s*((\s*\n)+|;)\s*/
        ///
        ///string = (&apos;&quot;&apos; /[^&quot;]*/ &apos;&quot;&apos;) | (&quot;&apos;&quot; /[^&apos;]*/ &quot;&apos;&quot;)
        ///bool = &quot;true&quot; | &quot;false&quot;
        ///int = /-?[0-9]+/
        ///float = /-?([0-9]*\.)?[0-9]+f?/
        ///operator = &apos;+&apos; | &apos; [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string imp_grammar {
            get {
                return ResourceManager.GetString("imp_grammar", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to #include &lt;vector.h&gt;
        ///
        ///namespace metahub {
        ///	/*
        ///	class List&lt;T&gt; {
        ///		static T remove&lt;T&gt;(std::vector
        ///
        ///
        ///
        ///	}
        ///	*/
        ///}.
        /// </summary>
        internal static string list_h {
            get {
                return ResourceManager.GetString("list_h", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to start = trim @(statement, newlines, 0, 0) final_trim
        ///
        ///none = /&amp;*/
        ///ws = /\s+/
        ///trim = /\s*/
        ///final_trim = /\s*$/
        ///newlines = /(\s*\n)+\s*/
        ///comma_or_newline = /\s*((\s*\n)+|,)\s*/
        ///dot = &quot;.&quot;
        ///path_function_separator = &quot;.&quot; | &quot;|&quot;
        ///
        ///id = /[a-zA-Z0-9_]+/
        ///
        ///path = @(id, dot, 2, 0)
        ///
        ///path_or_id = @(id, dot, 1, 0)
        ///
        ///id_or_array = id | array
        ///
        ///reference = @(id_or_array, path_function_separator, 1, 0)
        ///
        ///method = &quot;|&quot; id
        ///
        ///statement =
        ///	  create_group
        ///	| group_scope
        ///    | create_symbol
        ///	| if
        ///    | constra [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string metahub_grammar {
            get {
                return ResourceManager.GetString("metahub_grammar", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///namespace metahub {
        ///
        ///  class Hub {
        ///
        ///    tick() {
        ///
        ///    }
        ///  }
        ///
        ///  class Tick_Target {
        ///    abstract tick()
        ///  }
        ///}.
        /// </summary>
        internal static string metahub_imp {
            get {
                return ResourceManager.GetString("metahub_imp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;trellises&quot;: {
        ///    &quot;Hub&quot;: {
        ///      &quot;properties&quot;: {
        ///        &quot;tick_targets&quot;: {
        ///          &quot;type&quot;: &quot;list&quot;,
        ///          &quot;trellis&quot;: &quot;Tick_Target&quot;
        ///        }
        ///      }
        ///    },
        ///    &quot;Tick_Target&quot;: {
        ///      &quot;is_interface&quot;: true,
        ///      &quot;properties&quot;: {
        ///        &quot;hub&quot;: {
        ///          &quot;type&quot;: &quot;reference&quot;,
        ///          &quot;trellis&quot;: &quot;Hub&quot;
        ///        }
        ///      }
        ///    }
        ///  }
        ///}.
        /// </summary>
        internal static string metahub_json {
            get {
                return ResourceManager.GetString("metahub_json", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;start&quot;: {
        ///    &quot;type&quot;: &quot;repetition&quot;,
        ///    &quot;action&quot;: &quot;start&quot;,
        ///    &quot;pattern&quot;: {
        ///      &quot;type&quot;: &quot;reference&quot;,
        ///      &quot;name&quot;: &quot;rule&quot;
        ///    },
        ///    &quot;divider&quot;: {
        ///      &quot;type&quot;: &quot;reference&quot;,
        ///      &quot;name&quot;: &quot;whitespace&quot;
        ///    }
        ///  },
        ///
        ///  &quot;id&quot;: {
        ///    &quot;type&quot;: &quot;regex&quot;,
        ///    &quot;text&quot;: &quot;[a-zA-Z0-9_]+&quot;
        ///  },
        ///
        ///  &quot;whitespace&quot;: {
        ///    &quot;type&quot;: &quot;regex&quot;,
        ///    &quot;text&quot;: &quot;\\s+&quot;
        ///  },
        ///
        ///  &quot;trim&quot;: {
        ///    &quot;type&quot;: &quot;regex&quot;,
        ///    &quot;text&quot;: &quot;\\s*&quot;
        ///  },
        ///
        ///  &quot;comma&quot;: {
        ///    &quot;type&quot;: &quot;regex&quot;,
        ///    &quot;text&quot;: &quot;[ \\r\\n]*,[ \\r\\n]*&quot;
        ///  }, [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string parser {
            get {
                return ResourceManager.GetString("parser", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///namespace piecemaker {
        ///
        ///	class Conflict {
        ///		abstract is_resolved():bool
        ///		abstract resolve()
        ///	}
        ///
        ///	class Conflict_Group {
        ///
        ///	}
        ///
        ///	class Piece_Maker {
        ///
        ///		update() {
        ///			if (is_active)
        ///				return
        ///
        ///			if (conflicts.count() &gt; 0) {
        ///				var conflict:Conflict = conflicts.last()
        ///				conflicts.pop()
        ///				if (conflict.is_resolved)
        ///					return
        ///
        ///				conflict.resolve
        ///			}
        ///		}
        ///
        ///	}
        ///}.
        /// </summary>
        internal static string piecemaker_imp {
            get {
                return ResourceManager.GetString("piecemaker_imp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;targets&quot;: {
        ///    &quot;cpp&quot;: {
        ///      &quot;class_export&quot;: &quot;CORE_API&quot;
        ///    }
        ///  },
        ///  &quot;trellises&quot;: {
        ///    &quot;Piece_Maker&quot;: {
        ///      &quot;properties&quot;: {
        ///        &quot;hub&quot;: {
        ///          &quot;type&quot;: &quot;reference&quot;,
        ///          &quot;trellis&quot;: &quot;metahub.Hub&quot;,
        ///          &quot;other_property&quot;: &quot;piece_maker&quot;
        ///        },
        ///        &quot;conflicts&quot;: {
        ///          &quot;type&quot;: &quot;list&quot;,
        ///          &quot;trellis&quot;: &quot;Conflict&quot;
        ///        },
        ///        &quot;is_active&quot;: {
        ///          &quot;type&quot;: &quot;bool&quot;,
        ///          &quot;default&quot;: true
        ///        }
        ///      }
        ///    },
        ///    &quot;Conflict&quot;: {
        ///       [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string piecemaker_json {
            get {
                return ResourceManager.GetString("piecemaker_json", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to @@@Distance_Conflict(Class_Name, Node_Type)
        ///	class Class_Name : Conflict {
        ///	
        ///		nodes: Node_Type[]
        ///
        ///		is_resolved():bool {
        ///		
        ///		}
        ///
        ///		resolve() {
        ///			var offset:Vector3 = (nodes[0].position - nodes[1].position) / 2
        ///			nodes[0].position += offset
        ///			nodes[1].position -= offset
        ///		}
        ///	}
        ///.
        /// </summary>
        internal static string piecemaker_snippets {
            get {
                return ResourceManager.GetString("piecemaker_snippets", resourceCulture);
            }
        }
    }
}
